#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        td_shift_capsword: td_shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps>;
        };

        lt_rpi: lt_rpi {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_RPI";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R        &kp T      &kp Y        &kp U            &kp I         &kp O       &kp P               &none
&none  &hm LCMD A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G      &kp H        &hm RSHFT J      &hm RCTRL K   &hm RALT L  &hm RCMD SEMICOLON  &none
&none  &kp Z       &kp X       &kp C        &kp V        &kp B      &kp N        &kp M            &kp COMMA     &kp DOT     &kp FSLH            &none
                               &lt 5 ESC    &lt 1 SPACE  &kp TAB    &lt 3 ENTER  &lt 2 BACKSPACE  &lt 4 DELETE
            >;
        };

        NAV {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO    &kp K_PASTE    &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LCMD  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp CAPSLOCK  &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp INS       &kp HOME       &kp PG_DN   &kp PG_UP  &kp END     &trans
                            &trans     &trans     &trans    &kp ENTER     &kp BACKSPACE  &kp DELETE
            >;
        };

        NUM {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL        &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RCMD  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BACKSLASH    &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS        &trans  &trans     &trans
            >;
        };

        SYM {
            display-name = "Sym";
            bindings = <
&trans  &kp LBRC   &kp AMPERSAND    &kp ASTERISK  &kp LPAR   &kp RBRC          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp PLUS          &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RCMD  &trans
&trans  &kp TILDE  &kp EXCLAMATION  &kp AT        &kp HASH   &kp PIPE          &trans  &trans     &trans     &trans    &trans    &trans
                                    &kp LPAR      &kp RPAR   &kp UNDERSCORE    &trans  &trans     &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp SYSREQ         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RCMD  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &kp K_MENU  &kp SPACE  &kp TAB            &trans  &trans     &trans
            >;

            label = "Func";
        };

        MED {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans        &trans
&trans  &kp LCMD  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans          &trans        &kp C_VOL_DN  &kp C_VOL_UP  &trans        &trans
&trans  &trans    &trans    &trans     &trans     &trans    &out OUT_TOG    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
                            &trans     &trans     &trans    &trans          &trans        &kp K_MUTE
            >;

            label = "Media";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
